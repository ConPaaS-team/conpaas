user                 $user;
worker_processes     1;

error_log            $error_log crit;
pid                  $pid_file;

events {
  worker_connections 1024;
}

http {
  ## GENERAL SETTINGS
  include            /etc/nginx/mime.types;
  access_log         $access_log;
  sendfile           on;
  keepalive_timeout  65;
  tcp_nodelay        on;
  gzip               on;
  gzip_disable       "MSIE [1-6]\.(?!.*SV1)";
  port_in_redirect   off;
  index              index.html index.htm #if $fpm_list#index.php#end if# #if $tomcat_list#index.jsp#end if#;
  error_page         403 = @forbidden;
  error_page         404 = @notfound;
  error_page         500 = @internalerror;
  types_hash_bucket_size 64;

  ## CS --- Ganglia --- added extended log format for monitoring response time:
  log_format timed_requests '\$remote_addr - \$remote_user [\$time_local] '
                '"\$request" \$status \$body_bytes_sent '
                'upstream_addr \$upstream_addr'
                '"\$http_referer" "\$http_user_agent" \$msec \$request_time';

  access_log  $timed_log  timed_requests;
  server_names_hash_bucket_size 128;

  ## UPSTREAM CONFIG FOR STATIC DOCUMENTS
  #if $web_list
  upstream web_upstream {
    #for $web in $web_list
    server $web.ip:$web.port;
    #end for
  }
  #end if
  
  ## UPSTREAM CONFIG FOR PHP FPM
  #if $fpm_list
  upstream fpm_upstream {
    #for $fpm in $fpm_list
    server $fpm.ip:$fpm.port;
    #end for
  }
  #end if
  
  ## UPSTREAM CONFIG FOR TOMCAT
  #if $tomcat_list
  upstream tomcat_upstream {
    #for $tomcat in $tomcat_list
    server $tomcat.ip:$tomcat.port;
    #end for
  }
  #end if

  ## GEOLOCATION FOR CDS
  #if $cdn
  geoip_country      /usr/share/GeoIP/GeoIP.dat;
  perl_set \$cdn_prefix '
use IO::Socket;

sub {
    my \$req = shift;
    my \$mc_host = "$cdn";
    my \$mc_port = 11211;
    my \$prefix = \$req->header_in("Host");
    my \$country = \$req->variable("geoip_country_code");

    my \$sock = new IO::Socket::INET (
        PeerAddr => \$mc_host,
	PeerPort => \$mc_port,
	Proto => "tcp",
    );
    if (!\$sock) {
       return \$prefix;
    }
    print \$sock "get \$country\r\n";
    my \$line = <\$sock>;
    if (\$line =~ /^VALUE/) {
       \$line = <\$sock>;
       \$line =~ s/\s+\$//;
       if (\$line) {
       	  \$prefix = "\$line/\$prefix";
       }
    }
    close \$sock;
    return \$prefix;
}
';
  #end if
  
  server {
    server_name $proxy_ip;
    listen  $port default;
    root    $doc_root/$code_version;
    client_max_body_size 0; ## disabled

    ## User-specified configuration for the server stanza. We pretend this is a
    ## regular expression so that nginx starts properly even if the file is missing
    include /var/cache/cpsagent/nginx-us[e]r-server.conf;

    location / {
      ## User-specified configuration for the root location
      include /var/cache/cpsagent/nginx-use[r]-rootloc.conf;

      try_files \$uri \$uri/ /index.php?q=\$request_uri;

      #if $web_list
      proxy_set_header  Host $code_version;
      proxy_set_header  X-Real-IP \$remote_addr;
      proxy_intercept_errors on;
      if ( -f \$request_filename ) {
        proxy_pass        http://web_upstream;
        break;
      }
      if ( -f \$request_filename/index.html ) {
        rewrite ^(.*)\$ \$1/index.html last;
      }
      #end if
      #if $fpm_list
      if ( -f \$request_filename/index.php ) {
        rewrite ^(.*)\$ \$1/index.php last;
      }
      #else if $tomcat_list
      if ( -f \$request_filename/index.jsp ) {
        rewrite ^(.*)\$ \$1/index.jsp last;
      }
      #end if
    }
    #if $fpm_list
    location ~ \.php\$ {
      include        /etc/nginx/fastcgi_params;
      fastcgi_param  SCRIPT_FILENAME \$document_root/\$fastcgi_script_name;
      fastcgi_param  SERVER_NAME \$host;
      #if $cdn
      fastcgi_param  GEOIP_COUNTRY_CODE \$geoip_country_code;
      fastcgi_param  CDN_URL_PREFIX   \$cdn_prefix;
      #end if
      fastcgi_intercept_errors off;
      fastcgi_pass   fpm_upstream;
      fastcgi_buffers 8 16k;
      fastcgi_buffer_size 32k;
    }
    #end if
      #if $tomcat_list
      location ~ \.jsp\$ {
	    rewrite ^(.*)\$  /$code_version\$1  break;
	    proxy_set_header Host \$host;
	    proxy_set_header X-Real-IP \$remote_addr;
	    proxy_intercept_errors on;
	    proxy_pass       http://tomcat_upstream;
	  }
	  #for $servlet in $tomcat_servlets
	  location = $servlet {
	    rewrite ^(.*)\$  /$code_version\$1  break;
	    proxy_set_header Host \$host;
	    proxy_set_header X-Real-IP \$remote_addr;
	    proxy_intercept_errors on;
	    proxy_pass       http://tomcat_upstream;
	  }
	  #end for
    #end if
    location @forbidden {
    }
    location @notfound {
    }
    location @internalerror {
    }
  }
}
