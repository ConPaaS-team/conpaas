%!PS-Adobe-2.0 EPSF-2.0
%%Title: .//vm_performance_req.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Thu Jun 20 00:29:00 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (.//vm_performance_req.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (asturias)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jun 20 00:29:00 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
602 448 M
63 0 V
6282 0 R
-63 0 V
518 448 M
( 0) Rshow
1.000 UL
LTb
602 1143 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 5) Rshow
1.000 UL
LTb
602 1838 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 10) Rshow
1.000 UL
LTb
602 2534 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 15) Rshow
1.000 UL
LTb
602 3229 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 20) Rshow
1.000 UL
LTb
602 3924 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 25) Rshow
1.000 UL
LTb
602 4619 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 30) Rshow
1.000 UL
LTb
602 448 M
0 63 V
0 4108 R
0 -63 V
602 308 M
( 0) Cshow
1.000 UL
LTb
1508 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 500) Cshow
1.000 UL
LTb
2415 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1000) Cshow
1.000 UL
LTb
3321 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 1500) Cshow
1.000 UL
LTb
4228 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2000) Cshow
1.000 UL
LTb
5134 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 2500) Cshow
1.000 UL
LTb
6041 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3000) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(Reqs/qsec) Cshow
grestore
LTb
LCb setrgbcolor
3774 98 M
(Time) Cshow
LTb
3774 4829 M
(VM Ideal Performance Req_Rate) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
5.000 UL
LT0
0.00 1.00 0.00 C LCb setrgbcolor
6296 4486 M
(Req_rate) Rshow
LT0
0.00 1.00 0.00 C 6380 4486 M
399 0 V
602 563 M
25 5 V
26 451 V
25 803 V
26 359 V
25 -28 V
25 -19 V
26 0 V
25 -6 V
25 -18 V
26 100 V
25 -110 V
26 33 V
25 1950 V
957 2992 L
983 1847 L
25 358 V
25 -26 V
26 39 V
25 -46 V
26 -115 V
25 203 V
25 -92 V
26 44 V
25 -225 V
26 136 V
25 8 V
25 67 V
26 -14 V
25 -40 V
25 39 V
26 -35 V
25 -35 V
26 48 V
25 18 V
25 -24 V
26 45 V
25 -55 V
25 58 V
26 -94 V
25 109 V
26 137 V
25 -202 V
25 -176 V
26 191 V
25 44 V
25 -225 V
26 136 V
25 8 V
26 67 V
25 -14 V
25 -40 V
26 39 V
25 -35 V
26 -35 V
25 48 V
25 18 V
26 -24 V
25 45 V
25 -55 V
26 58 V
25 -94 V
26 109 V
25 137 V
25 -202 V
26 -176 V
25 212 V
25 4 V
26 -68 V
25 106 V
26 -78 V
25 53 V
25 -96 V
26 53 V
25 34 V
26 -16 V
25 55 V
25 47 V
26 -58 V
25 -66 V
25 -8 V
26 -45 V
25 12 V
26 -139 V
25 119 V
25 57 V
26 5 V
25 39 V
25 -896 V
26 77 V
25 804 V
26 186 V
25 -1194 V
25 241 V
26 -31 V
25 23 V
25 -25 V
26 -6 V
25 62 V
26 10 V
25 -60 V
25 31 V
26 -23 V
25 9 V
26 -21 V
25 -13 V
25 62 V
26 -50 V
25 -98 V
25 43 V
26 71 V
25 -28 V
26 -30 V
25 24 V
25 144 V
26 -138 V
25 -16 V
25 69 V
26 -79 V
25 -2 V
stroke 3622 1345 M
26 32 V
25 30 V
25 -28 V
26 56 V
25 -60 V
26 0 V
25 7 V
25 -52 V
26 71 V
25 -28 V
25 -30 V
26 24 V
25 144 V
26 -138 V
25 -16 V
25 69 V
26 -79 V
25 -2 V
25 32 V
26 30 V
25 -28 V
26 56 V
25 -60 V
25 0 V
26 7 V
25 90 V
25 -32 V
26 -11 V
25 -20 V
26 -111 V
25 -841 V
25 -8 V
26 4 V
25 4 V
26 4 V
25 3 V
25 3 V
26 4 V
25 4 V
25 4 V
26 4 V
25 1 V
26 3 V
25 3 V
25 6 V
26 1 V
25 932 V
25 -20 V
26 -111 V
25 -841 V
26 -8 V
25 4 V
25 4 V
26 4 V
25 3 V
26 3 V
25 4 V
25 4 V
26 4 V
25 4 V
25 1 V
26 3 V
25 3 V
26 6 V
25 1 V
25 3 V
26 4 V
25 1 V
25 5 V
26 3 V
25 -1 V
26 5 V
25 5 V
25 5 V
26 3 V
25 -1 V
25 4 V
26 5 V
25 3 V
26 2 V
25 4 V
25 -1 V
26 5 V
25 8 V
26 0 V
25 -59 V
25 4 V
26 1 V
25 5 V
25 3 V
26 -1 V
25 5 V
26 5 V
25 5 V
25 3 V
26 -1 V
25 4 V
25 5 V
26 3 V
25 2 V
26 4 V
25 -1 V
25 5 V
26 8 V
stroke 6262 559 M
25 0 V
26 4 V
25 5 V
25 451 V
26 803 V
25 359 V
25 -28 V
26 -19 V
25 0 V
26 -6 V
25 -18 V
25 100 V
26 -110 V
25 33 V
25 1950 V
26 -1091 V
25 -1145 V
26 358 V
25 -26 V
25 39 V
26 -46 V
25 -115 V
25 203 V
602 563 Pls
627 568 Pls
653 1019 Pls
678 1822 Pls
704 2181 Pls
729 2153 Pls
754 2134 Pls
780 2134 Pls
805 2128 Pls
830 2110 Pls
856 2210 Pls
881 2100 Pls
907 2133 Pls
932 4083 Pls
957 2992 Pls
983 1847 Pls
1008 2205 Pls
1033 2179 Pls
1059 2218 Pls
1084 2172 Pls
1110 2057 Pls
1135 2260 Pls
1160 2168 Pls
1186 2212 Pls
1211 1987 Pls
1237 2123 Pls
1262 2131 Pls
1287 2198 Pls
1313 2184 Pls
1338 2144 Pls
1363 2183 Pls
1389 2148 Pls
1414 2113 Pls
1440 2161 Pls
1465 2179 Pls
1490 2155 Pls
1516 2200 Pls
1541 2145 Pls
1566 2203 Pls
1592 2109 Pls
1617 2218 Pls
1643 2355 Pls
1668 2153 Pls
1693 1977 Pls
1719 2168 Pls
1744 2212 Pls
1769 1987 Pls
1795 2123 Pls
1820 2131 Pls
1846 2198 Pls
1871 2184 Pls
1896 2144 Pls
1922 2183 Pls
1947 2148 Pls
1973 2113 Pls
1998 2161 Pls
2023 2179 Pls
2049 2155 Pls
2074 2200 Pls
2099 2145 Pls
2125 2203 Pls
2150 2109 Pls
2176 2218 Pls
2201 2355 Pls
2226 2153 Pls
2252 1977 Pls
2277 2189 Pls
2302 2193 Pls
2328 2125 Pls
2353 2231 Pls
2379 2153 Pls
2404 2206 Pls
2429 2110 Pls
2455 2163 Pls
2480 2197 Pls
2506 2181 Pls
2531 2236 Pls
2556 2283 Pls
2582 2225 Pls
2607 2159 Pls
2632 2151 Pls
2658 2106 Pls
2683 2118 Pls
2709 1979 Pls
2734 2098 Pls
2759 2155 Pls
2785 2160 Pls
2810 2199 Pls
2835 1303 Pls
2861 1380 Pls
2886 2184 Pls
2912 2370 Pls
2937 1176 Pls
2962 1417 Pls
2988 1386 Pls
3013 1409 Pls
3038 1384 Pls
3064 1378 Pls
3089 1440 Pls
3115 1450 Pls
3140 1390 Pls
3165 1421 Pls
3191 1398 Pls
3216 1407 Pls
3242 1386 Pls
3267 1373 Pls
3292 1435 Pls
3318 1385 Pls
3343 1287 Pls
3368 1330 Pls
3394 1401 Pls
3419 1373 Pls
3445 1343 Pls
3470 1367 Pls
3495 1511 Pls
3521 1373 Pls
3546 1357 Pls
3571 1426 Pls
3597 1347 Pls
3622 1345 Pls
3648 1377 Pls
3673 1407 Pls
3698 1379 Pls
3724 1435 Pls
3749 1375 Pls
3775 1375 Pls
3800 1382 Pls
3825 1330 Pls
3851 1401 Pls
3876 1373 Pls
3901 1343 Pls
3927 1367 Pls
3952 1511 Pls
3978 1373 Pls
4003 1357 Pls
4028 1426 Pls
4054 1347 Pls
4079 1345 Pls
4104 1377 Pls
4130 1407 Pls
4155 1379 Pls
4181 1435 Pls
4206 1375 Pls
4231 1375 Pls
4257 1382 Pls
4282 1472 Pls
4307 1440 Pls
4333 1429 Pls
4358 1409 Pls
4384 1298 Pls
4409 457 Pls
4434 449 Pls
4460 453 Pls
4485 457 Pls
4511 461 Pls
4536 464 Pls
4561 467 Pls
4587 471 Pls
4612 475 Pls
4637 479 Pls
4663 483 Pls
4688 484 Pls
4714 487 Pls
4739 490 Pls
4764 496 Pls
4790 497 Pls
4815 1429 Pls
4840 1409 Pls
4866 1298 Pls
4891 457 Pls
4917 449 Pls
4942 453 Pls
4967 457 Pls
4993 461 Pls
5018 464 Pls
5044 467 Pls
5069 471 Pls
5094 475 Pls
5120 479 Pls
5145 483 Pls
5170 484 Pls
5196 487 Pls
5221 490 Pls
5247 496 Pls
5272 497 Pls
5297 500 Pls
5323 504 Pls
5348 505 Pls
5373 510 Pls
5399 513 Pls
5424 512 Pls
5450 517 Pls
5475 522 Pls
5500 527 Pls
5526 530 Pls
5551 529 Pls
5576 533 Pls
5602 538 Pls
5627 541 Pls
5653 543 Pls
5678 547 Pls
5703 546 Pls
5729 551 Pls
5754 559 Pls
5780 559 Pls
5805 500 Pls
5830 504 Pls
5856 505 Pls
5881 510 Pls
5906 513 Pls
5932 512 Pls
5957 517 Pls
5983 522 Pls
6008 527 Pls
6033 530 Pls
6059 529 Pls
6084 533 Pls
6109 538 Pls
6135 541 Pls
6160 543 Pls
6186 547 Pls
6211 546 Pls
6236 551 Pls
6262 559 Pls
6287 559 Pls
6313 563 Pls
6338 568 Pls
6363 1019 Pls
6389 1822 Pls
6414 2181 Pls
6439 2153 Pls
6465 2134 Pls
6490 2134 Pls
6516 2128 Pls
6541 2110 Pls
6566 2210 Pls
6592 2100 Pls
6617 2133 Pls
6642 4083 Pls
6668 2992 Pls
6693 1847 Pls
6719 2205 Pls
6744 2179 Pls
6769 2218 Pls
6795 2172 Pls
6820 2057 Pls
6845 2260 Pls
6579 4486 Pls
% End plot #1
1.000 UL
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
